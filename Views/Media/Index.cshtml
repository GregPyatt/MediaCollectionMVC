@model ScannedMediumViewModel
@{
    int MaxPageButtons = 25;
    int HalfPageButtons = MaxPageButtons / 2; // Division of integers is rounded down.

    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<!-- Added for pagination -->
<nav>
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="@Url.Action("Index", new { pageIndex = 1 })">First</a>
        </li>
        <li class="page-item @(Model.Pagination.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { pageIndex = Model.Pagination.CurrentPage - 1 })">Previous</a>
        </li>
        @if (Model.Pagination.TotalPages >= MaxPageButtons)
        {
            switch (Model.Pagination.CurrentPage)
            {
                case int j when j < HalfPageButtons:
                    for (int i = 1; i <= MaxPageButtons; i++)
                    {
                        <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { pageIndex = i })">@i</a>
                        </li>
                    }
                    break;

                case int j when j >= HalfPageButtons && j + MaxPageButtons <= Model.Pagination.TotalPages:
                        for (int i = Model.Pagination.CurrentPage - HalfPageButtons + 1; i < Model.Pagination.CurrentPage + HalfPageButtons + 1; i++)
                        {
                            <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { pageIndex = i })">@i</a>
                            </li>
                        }
                    break;

                case int j when j > Model.Pagination.TotalPages - MaxPageButtons:
                        for (int i = Model.Pagination.TotalPages - MaxPageButtons; i <= Model.Pagination.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { pageIndex = i })">@i</a>
                            </li>
                        }
                    break;
                default: 
                    break;
            }

        }
        <li class="page-item @(Model.Pagination.CurrentPage == Model.Pagination.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("Index", new { pageIndex = Model.Pagination.CurrentPage + 1 })">Next</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="@Url.Action("Index", new { pageIndex = Model.Pagination.TotalPages })">Last</a>
        </li>
    </ul>
</nav>




<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].Authors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].Categories)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].PublishedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].Publisher)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].Pages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ScannedMediaObjects[0].IsRead)
            </th>
            @*
            <th>
                @Html.DisplayNameFor(model => model.ReadingPeriods)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Summary)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CoverPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAudioBook)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPaperBook)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPdfbook)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDonated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DonationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Medium)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quality)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OktoDonate)
            </th>
            *@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ScannedMediaObjects) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Authors)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categories)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublishedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pages)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsRead)
            </td>
            @*
            <td>
                @Html.DisplayFor(modelItem => item.ReadingPeriods)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CoverPath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAudioBook)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPaperBook)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPdfbook)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDonated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DonationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Medium)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quality)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OktoDonate)
            </td> 
            *@
            <td style="width: 15%">
                <a asp-action="Edit" asp-route-id="@item.MediaId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.MediaId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.MediaId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
